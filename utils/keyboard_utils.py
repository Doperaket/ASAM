import time
import pyautogui
import pyperclip
import tkinter as tk
from tkinter import messagebox
import locale
import ctypes
from ctypes import wintypes


def send_paste_command():
    try:
        VK_CONTROL = 0x11
        VK_V = ord('V')
        
        KEYEVENTF_KEYUP = 0x0002
        
        user32 = ctypes.windll.user32
        
        user32.keybd_event(VK_CONTROL, 0, 0, 0)
        time.sleep(0.01)
        
        user32.keybd_event(VK_V, 0, 0, 0)
        time.sleep(0.01)
        
        user32.keybd_event(VK_V, 0, KEYEVENTF_KEYUP, 0)
        time.sleep(0.01)
        
        user32.keybd_event(VK_CONTROL, 0, KEYEVENTF_KEYUP, 0)
        time.sleep(0.1)
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã –≤—Å—Ç–∞–≤–∫–∏: {e}")
        return False


def safe_clipboard_paste(text):
    try:
        old_clipboard = ""
        try:
            old_clipboard = pyperclip.paste()
        except:
            pass
        
        try:
            pyperclip.copy(text)
            time.sleep(0.1)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞ –≤ –±—É—Ñ–µ—Ä: {e}")
            return False
        
        try:
            check_text = pyperclip.paste()
            if check_text != text:
                print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
        except:
            pass
        
        success = send_paste_command()
        
        if success:
            time.sleep(0.2)
            
            try:
                if old_clipboard:
                    pyperclip.copy(old_clipboard)
                    time.sleep(0.05)
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—É—Ñ–µ—Ä: {e}")
        
        return success
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ safe_clipboard_paste: {e}")
        return False


def safe_input_text(text):
    try:
        print(f"üî§ –í–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç: '{text[:20]}{'...' if len(text) > 20 else ''}' ({len(text)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
        success = safe_clipboard_paste(text)
        
        if success:
            print(f"‚úÖ –¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –≤–≤–µ–¥–µ–Ω")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞, –ø—Ä–æ–±—É–µ–º fallback...")
            return safe_input_fallback(text)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞: {e}")
        return safe_input_fallback(text)


def safe_input_fallback(text):
    try:
        print("üîÑ Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º pyperclip + pyautogui...")
        
        old_clipboard = ""
        try:
            old_clipboard = pyperclip.paste()
        except:
            pass
        
        pyperclip.copy(text)
        time.sleep(0.1)
        
        pyautogui.hotkey('ctrl', 'v')
        time.sleep(0.2)
        
        try:
            if old_clipboard:
                pyperclip.copy(old_clipboard)
        except:
            pass
        
        print(f"‚úÖ Fallback: —Ç–µ–∫—Å—Ç –≤–≤–µ–¥–µ–Ω")
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ fallback: {e}")
        
        try:
            if all(ord(char) < 128 for char in text):
                print("üîÑ –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞: –ø—Ä—è–º–æ–π –≤–≤–æ–¥...")
                pyautogui.write(text, interval=0.05)
                print(f"‚úÖ –ü—Ä—è–º–æ–π –≤–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω")
                return True
            else:
                print(f"‚ùå –ü—Ä—è–º–æ–π –≤–≤–æ–¥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω: —Å–æ–¥–µ—Ä–∂–∏—Ç non-ASCII —Å–∏–º–≤–æ–ª—ã")
                return False
        except Exception as e2:
            print(f"‚ùå –ü–æ–ª–Ω—ã–π –ø—Ä–æ–≤–∞–ª –≤–≤–æ–¥–∞: {e2}")
            return False


def get_keyboard_layout():
    try:
        user32 = ctypes.windll.user32
        
        hwnd = user32.GetForegroundWindow()
        thread_id = user32.GetWindowThreadProcessId(hwnd, 0)
        layout_id = user32.GetKeyboardLayout(thread_id)
        
        lang_id = layout_id & 0xFFFF
        
        if lang_id == 1049:
            return "RU"
        elif lang_id == 1033:
            return "EN"
        else:
            return f"OTHER({lang_id})"
            
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∫—É: {e}")
        return "UNKNOWN"


def switch_to_english_layout():
    try:
        ENGLISH_LAYOUT = 0x04090409
        user32 = ctypes.windll.user32
        
        hwnd = user32.GetForegroundWindow()
        
        user32.PostMessageW(hwnd, 0x0050, 0, ENGLISH_LAYOUT)
        time.sleep(0.1)
        
        return True
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∫—É: {e}")
        return False


def safe_input_with_layout_check(text):
    try:
        current_layout = get_keyboard_layout()
        print(f"üîç –¢–µ–∫—É—â–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞: {current_layout}")
        
        has_cyrillic = any(ord(char) >= 1024 and ord(char) <= 1279 for char in text)
        has_latin = any(ord(char) >= 65 and ord(char) <= 122 for char in text)
        
        if has_latin and not has_cyrillic and current_layout == "RU":
            print("üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω –ª–∞—Ç–∏–Ω—Å–∫–∏–π —Ç–µ–∫—Å—Ç –ø—Ä–∏ —Ä—É—Å—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ")
        
        return safe_input_text(text)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞—Å–∫–ª–∞–¥–∫–∏: {e}")
        return safe_input_text(text)


def safe_type_login(text):
    print(f"üîë –í–≤–æ–¥–∏–º –ª–æ–≥–∏–Ω...")
    return safe_input_with_layout_check(text)


def safe_type_password(text):
    print(f"üîí –í–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å...")
    return safe_input_with_layout_check(text)


def safe_type_guard_code(text):
    print(f"üõ°Ô∏è –í–≤–æ–¥–∏–º 2FA –∫–æ–¥: {text}")
    return safe_input_with_layout_check(text)


def initialize_keyboard():
    try:
        print("üéπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã...")
        
        layout = get_keyboard_layout()
        print(f"üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Ä–∞—Å–∫–ª–∞–¥–∫–∞: {layout}")
        
        try:
            system_encoding = locale.getpreferredencoding()
            print(f"üî§ –°–∏—Å—Ç–µ–º–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞: {system_encoding}")
        except:
            print("üî§ –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é –∫–æ–¥–∏—Ä–æ–≤–∫—É")
        
        try:
            test_cyrillic = "—Ç–µ—Å—Ç"
            test_cyrillic.encode('utf-8')
            print("‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã: OK")
        except:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã")
        
        try:
            original_clipboard = ""
            try:
                original_clipboard = pyperclip.paste()
            except:
                pass
            
            pyperclip.copy("test")
            test_result = pyperclip.paste()
            
            try:
                if original_clipboard:
                    pyperclip.copy(original_clipboard)
                else:
                    pyperclip.copy("")
            except:
                pass
                
            print("‚úÖ pyperclip: OK")
        except Exception as e:
            print(f"‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å pyperclip: {e}")
        
        print("‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: {e}")
        return False